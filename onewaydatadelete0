%% 
onewaydata = cell(1, 192); 
[onewaydata{1:192}] = deal(zeros(17,34));
% row 1 to row 6 are for original data, without substracting pre-stimulus spiking rate.
% row 1 is spike sum of each trial of session 1. row 3 is time stamp of each trial. '105307-trialsPC1' is 1-96,
% '105423-trialsPC2' is 97-192.
k=1;
load('105307-trialsPC1');
for i = 1:96
    for m=2:2:68
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i}(k,m/2) = onewaydata{i}(k, m/2) + 1;
                    end    
                end
            end 
            onewaydata{i}(k+2,m/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

load('105423-trialsPC2');
for i = 1:96
    for m=2:2:68
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i+96}(k,m/2) = onewaydata{i+96}(k, m/2) + 1;
                    end    
                end
            end  
            onewaydata{i+96}(k+2,m/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

% row 2 is spike sum of each trial of session 2. row 4 is time stamp of each trial. 134159-trialsPC1 is 1-96,
% '134315-trialsPC2' is 97-192.
k=2;
load('134159-trialsPC1');
for i = 1:96
    for m=2:2:68
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i}(k,m/2) = onewaydata{i}(k, m/2) + 1;
                    end    
                end
            end  
            onewaydata{i}(k+2,m/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

load('134315-trialsPC2');
for i = 1:96
    for m=2:2:68
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i+96}(k,m/2) = onewaydata{i+96}(k, m/2) + 1;
                    end    
                end
            end 
            onewaydata{i+96}(k+2,m/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

% row 5 is spiking rate of each trial of session 1. row 6 is spiking rate of each trial of session 2.
for i = 1:192
    onewaydata{i}(5, :) = onewaydata{i}(1, :)./onewaydata{i}(3, :);
    onewaydata{i}(6, :) = onewaydata{i}(2, :)./onewaydata{i}(4, :);
end

% row 7 to row 12 are for pre-stimulus noise.
% row 7 is spike sum of each noise trial of session 1. row 9 is time stamp of each noise trial. '105307-trialsPC1' is 1-96,
% '105423-trialsPC2' is 97-192.

k=7;
load('105307-trialsPC1');
for i = 1:96
    for m=1:2:67
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i}(k,(m+1)/2) = onewaydata{i}(k, (m+1)/2) + 1;
                    end    
                end
            end 
            onewaydata{i}(k+2,(m+1)/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

load('105423-trialsPC2');
for i = 1:96
    for m=1:2:67
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i+96}(k,(m+1)/2) = onewaydata{i+96}(k, (m+1)/2) + 1;
                    end    
                end
            end 
            onewaydata{i+96}(k+2,(m+1)/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

% row 8 is spike sum of each noise trial of session 2. row 10 is time stamp of each noise trial. 134159-trialsPC1 is 1-96,
% '134315-trialsPC2' is 97-192.
k=8;
load('134159-trialsPC1');
for i = 1:96
    for m=1:2:67
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i}(k,(m+1)/2) = onewaydata{i}(k, (m+1)/2) + 1;
                    end    
                end
            end  
            onewaydata{i}(k+2,(m+1)/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

load('134315-trialsPC2');
for i = 1:96
    for m=1:2:67
            for j=1:length(E{i})
                index1 = [];
                index2 = [];
                if E{i}(j)>=NEV.Data.SerialDigitalIO.TimeStamp(m)&&E{i}(j)<=NEV.Data.SerialDigitalIO.TimeStamp(m+1)
                    index1 = find(NEV.Data.Spikes.TimeStamp==E{i}(j));
                    for q = 1:length(index1)
                       if NEV.Data.Spikes.Electrode(index1(q))==i
                           index2 = index1(q);
                       end
                    end 
                    if NEV.Data.Spikes.Unit(index2)==0
                        continue;
                    else
                        onewaydata{i+96}(k,(m+1)/2) = onewaydata{i+96}(k, (m+1)/2) + 1;
                    end    
                end
            end 
            onewaydata{i+96}(k+2,(m+1)/2)=NEV.Data.SerialDigitalIO.TimeStampSec(m+1)-...
            NEV.Data.SerialDigitalIO.TimeStampSec(m);
    end
end

% row 11 is spiking rate of each noise trial of session 1. row 12 is spiking rate of each noise trial of session 2.
for i = 1:192
    onewaydata{i}(11, :) = onewaydata{i}(7, :)./onewaydata{i}(9, :);
    onewaydata{i}(12, :) = onewaydata{i}(8, :)./onewaydata{i}(10, :);
end

% row 13 is standardized spiking rate of each trial of session 1, row 14 is
% standardized spiking rate of each trial of session 2.
for i = 1:192
    onewaydata{i}(13, :) = onewaydata{i}(5, :)-onewaydata{i}(11, :);
    onewaydata{i}(14, :) = onewaydata{i}(6, :)-onewaydata{i}(12, :);
end
% row 15 is word notation number of each trial, and row 16 is word type of each trial for session 1, 
%and row 17 is word number notation and 18 is word type for session 2.
load('105307-trialsPC1');
foot = [11,12,13,14,17,18,25,27,28,32];
hand = [4,5,9,10,16,19,20,22,24,26,29,30,31,33];
mouth = [1,2,3,6,7,8,15,21,23,34];
for i = 1:192
    onewaydata{i}(15, :) = NEV.Data.SerialDigitalIO.UnparsedData(2:2:68);
   for j = 1:34
      if ismember(onewaydata{i}(15, j),foot)==1
          onewaydata{i}(16,j) = 1;
      elseif ismember(onewaydata{i}(15, j),hand)==1
          onewaydata{i}(16,j) = 2;
      elseif ismember(onewaydata{i}(15, j),mouth)==1
          onewaydata{i}(16,j) = 3;
      end
   end
end
%
load('134159-trialsPC1');
foot = [11,12,13,14,17,18,25,27,28,32];
hand = [4,5,9,10,16,19,20,22,24,26,29,30,31,33];
mouth = [1,2,3,6,7,8,15,21,23,34];
for i = 1:192
    onewaydata{i}(17, :) = NEV.Data.SerialDigitalIO.UnparsedData(2:2:68);
   for j = 1:34
      if ismember(onewaydata{i}(17, j),foot)==1
          onewaydata{i}(18,j) = 1;
      elseif ismember(onewaydata{i}(17, j),hand)==1
          onewaydata{i}(18,j) = 2;
      elseif ismember(onewaydata{i}(17, j),mouth)==1
          onewaydata{i}(18,j) = 3;
      end
   end
end
%%
% one way ANOVA of original data
onewayporg = NaN(3,192);
onewayForg = NaN(3,192);
spikerateorg = NaN(3,192);
for i = 1:192
    [p,table]=anova1(onewaydata{i}(5,:),onewaydata{i}(16,:),'off');
   onewayporg(1,i) = p;
   onewayForg(1,i) = table{2,5};
end
for i = 1:192
    [p,table]=anova1(onewaydata{i}(6,:),onewaydata{i}(18,:),'off');
   onewayporg(2,i) = p;
   onewayForg(2,i) = table{2,5};
end
for i = 1:192
   data =horzcat(onewaydata{i}(5,:), onewaydata{i}(6,:));
    group = repmat(onewaydata{i}(16,:), onewaydata{i}(18, :));
    [p,table]=anova1(data, group,'off');
    onewayporg(3,i) = p;
    onewayForg(3,i) = table{2,5};
end

% one way ANOVA of standardized data.
onewaypstd = NaN(3,192);
onewayFstd = NaN(3,192);
spikeratestd = NaN(3,192);
for i = 1:192
    [p,table]=anova1(onewaydata{i}(13,:),onewaydata{i}(16,:),'off');
   onewaypstd(1,i) = p;
   onewayFstd(1,i) = table{2,5};
end
for i = 1:192
    [p,table]=anova1(onewaydata{i}(14,:),onewaydata{i}(18,:),'off');
   onewaypstd(2,i) = p;
   onewayFstd(2,i) = table{2,5};
end
for i = 1:192
   data =horzcat(onewaydata{i}(13,:), onewaydata{i}(14,:));
    group = repmat(onewaydata{i}(16,:), onewaydata{i}(18,:));
    [p,table]=anova1(data, group,'off');
    onewaypstd(3,i) = p;
    onewayFstd(3,i) = table{2,5};
end


% pick out the significant electrodes of original data, sigslct1org is for session 1
% and sigslct2org is for session 2.
   sigslct1org = [];
   sigslct2org = [];
for i = 1:192
   if onewayporg(1, i)<=0.05
      sigslct1org=[sigslct1org,i];
   end
   if onewayporg(2, i)<=0.05
      sigslct2org=[sigslct2org,i];
   end
end
% pick out the significant electrodes of standardized data, sigslct1std is for session 1
% and sigslct2std is for session 2.
   sigslct1std = [];
   sigslct2std = [];
for i = 1:192
   if onewaypstd(1, i)<=0.05
      sigslct1std=[sigslct1std,i];
   end
   if onewaypstd(2, i)<=0.05
      sigslct2std=[sigslct2std,i];
   end
end
% put spike rate of each electrode and ANOVA info together to see whether the spiking rate
% has relation to p value. summarysortorg are three tables for session 1, session 2 and combined sessions respectively,
% including spiking rate, p value and F value for each electrode, sorted by p
% value.summarysortstd are also these tables but for standardized data.
% sorrorg are three correlation tables for for session 1, session 2 and combined sessions respectively,
% and the correlation are among p value, F value and spiking rate.
for i = 1:192
    spikerateorg(1, i) = sum(onewaydata{i}(1, :))/sum(onewaydata{i}(3,:));
end
for i = 1:192
    spikerateorg(2, i) = sum(onewaydata{i}(2, :))/sum(onewaydata{i}(4,:));
end
for i = 1:192
    spikerateorg(3, i) = (sum(onewaydata{i}(1, :))+sum(onewaydata{i}(2, :)))...
    /(sum(onewaydata{i}(3,:))+sum(onewaydata{i}(4,:)));
end
for i = 1:3
summaryorg{i} = vertcat(onewayporg(i,:),onewayForg(i,:), spikerateorg(i,:));
[Y, I] = sort(summaryorg{i}(1, :));
summarysortorg{i} = summaryorg{i}(:, I);
end
%%
m = length(find(isnan(summarysortorg{1}(1, :)))==1);
corrorg{1}=corrcoef(summarysortorg{1}(:, 1:192-m)');
corrorg{1}=corrcoef(summarysortorg{1}(:, 1:192-m)');
corrorg{1}=corrcoef(summarysortorg{1}(:, 1:192-m)');

%%

for i = 1:192
    spikeratestd(1, i) = sum(onewaydata{i}(7, :))/sum(onewaydata{i}(9,:));
end
for i = 1:192
    spikeratestd(2, i) = sum(onewaydata{i}(8, :))/sum(onewaydata{i}(10,:));
end
for i = 1:192
    spikeratestd(3, i) = (sum(onewaydata{i}(7, :))+sum(onewaydata{i}(8, :)))...
    /(sum(onewaydata{i}(9,:))+sum(onewaydata{i}(10,:)));
end
for i = 1:3
summarystd{i} = vertcat(onewaypstd(i,:),onewayFstd(i,:), spikeratestd(i,:));
[Y, I] = sort(summarystd{i}(1, :));
summarysortstd{i} = summarystd{i}(:, I);
end
m = length(find(isnan(summarysortstd{1}(1, :)))==1);
corrstd{1}=corrcoef(summarysortstd{1}(:, 1:192-m)');
corrstd{1}=corrcoef(summarysortstd{1}(:, 1:192-m)');
corrstd{1}=corrcoef(summarysortstd{1}(:, 1:192-m)');
%%
% draw histogram of p value and F value of original data and standardized data.
h=figure('visible','on');
subplot(1,3,1)
hist(onewayporg(1, :),50);
yL=get(gca,'YLim');
line([0.05,0.05],yL,'Color','r');
title('session 1');
v=axis;
subplot(1,3,2)
hist(onewayporg(2, :),50);
line([0.05,0.05],yL,'Color','r');
title('session 2');
axis(v);
subplot(1,3,3)
hist(onewayporg(3, :),50);
line([0.05,0.05],yL,'Color','r');
title('session 1 & 2 combined');
axis(v);
saveas(h,'hist_pvalue_org','fig');
%
h=figure('visible','on');
subplot(1,3,1)
hist(onewayForg(1, :),50);
yL=get(gca,'YLim');
title('session 1');
v=axis;
subplot(1,3,2)
hist(onewayForg(2, :),50);
title('session 2');
axis(v);
subplot(1,3,3)
hist(onewayForg(3, :),50);
title('session 1 & 2 combined');
axis(v);
saveas(h,'hist_Fvalue_org','fig');
%
h=figure('visible','on');
subplot(1,3,1)
hist(onewaypstd(1, :),50);
yL=get(gca,'YLim');
line([0.05,0.05],yL,'Color','r');
title('session 1');
v=axis;
subplot(1,3,2)
hist(onewaypstd(2, :),50);
line([0.05,0.05],yL,'Color','r');
title('session 2');
axis(v);
subplot(1,3,3)
hist(onewayporg(3, :),50);
line([0.05,0.05],yL,'Color','r');
title('session 1 & 2 combined');
axis(v);
saveas(h,'hist_pvalue_std','fig');
%
h=figure('visible','on');
subplot(1,3,1)
hist(onewayFstd(1, :),50);
yL=get(gca,'YLim');
title('session 1');
v=axis;
subplot(1,3,2)
hist(onewayFstd(2, :),50);
title('session 2');
axis(v);
subplot(1,3,3)
hist(onewayporg(3, :),50);
title('session 1 & 2 combined');
axis(v);
saveas(h,'hist_Fvalue_std','fig');

